/**
 * 
 */
var map; // 맵의 접근 가능;


var Start= function Component(){
	const kakaoMapcomponent = new KakaoMapcomponent();
	kakaoMapcomponent.StartMap();	
}

 class KakaoMapcomponent {
	constructor() {
	}
	StartMap(){
		var container = document.getElementById('map');
		var options = {
			center: new kakao.maps.LatLng(38.21440383, 128.4376055),
			level: 3
		};		
		 map = new kakao.maps.Map(container, options);		
	}
	
	ExcelMap(markerPosition){
		let ExcelLenghs= num; //이 변수가 필요한지에 대한 논의 후 결정하시오.
						
	/* 테스트용 코드
	 * MakerPosition[][]
		console.log(markerPosition[0]['Position']['La']);
		console.log(markerPosition[1]['Position']['Ma']);
		console.log(markerPosition[2]['Position']);
		console.log(markerPosition[3]['Position']);
		console.log(markerPosition[4]['Position']);
	* 결과: 잘나옴.
	*/	
		/*클릭 리스너임
		ClickListener();
		*/		
		debugger
		let Imgsrc= "http://121.173.78.165:8989/Frontend/img/airplane.png";
			
		const kakao = new KakaoMapcomponent();
		kakao.MultiMarker(Imgsrc, markerPosition);
	}
	
	MultiMarker(Imgsrc, markerPosition){
		let imageSize = new kakao.maps.Size(24, 35);
		let markerImage= new kakao.maps.MarkerImage(Imgsrc, imageSize)
		
		console.log(markerPosition.Position);
		console.log(Imgsrc);
		
		 let marker = new kakao.maps.Marker({
		        map: map, // 마커를 표시할 지도
		        position: markerPosition[0].Position, // 마커를 표시할 위치
		        /*title : positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
*/		        image : markerImage // 마커 이미지 
		    });
		 
		 console.log(marker);
	}
	
}
 //시작함수.
 Start();
