/**
 * 
 */
class ClassName {
	constructor() {
	
	}
	StartMap(){
		var container = document.getElementById('map');
		var options = {
			center: new kakao.maps.LatLng(33.450701, 126.570667),
			level: 3
		};
		var map = new kakao.maps.Map(container, options);	
	}
	ExcelMap(){
		let ExcelLenghs= num; //이 변수가 필요한지에 대한 논의 후 결정하시오.
		
		// 지도에 클릭 이벤트를 등록합니다
		// 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다
		var markerPosition={};
		//엑셀의 Position을 대입 시키는 for문입니다.
		for(let i=0;i<ExcelLenghs;i++){	
			markerPosition[i]={
			Position: new kakao.maps.LatLng(rows[i]['Latitude'],rows[i]['Longitude'])
				};
			}
		
	/* 테스트용 코드
	 * MakerPosition[][]
		console.log(markerPosition[0]['Position']['La']);
		console.log(markerPosition[1]['Position']['Ma']);
		console.log(markerPosition[2]['Position']);
		console.log(markerPosition[3]['Position']);
		console.log(markerPosition[4]['Position']);
	* 결과: 잘나옴.
	*/	
		/*클릭 리스너임
		ClickListener();
		*/
		//지도에 표시된 마커 객체를 가지고 있을 배열입니다.	
		var markers=[];
		
		debugger
		let Imgsrc= "/Frontend/img/airplane.png";
			
		MultiMarker(Imgsrc, markerPosition);
	//app함수의 끝	   	
	}
}